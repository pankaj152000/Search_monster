{"version":3,"sources":["components/card/card.jsx","components/card_list/card_list_component.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","search","handleChange","type","placeholder","onChange","App","state","searchfield","fetch","then","response","json","users","setState","this","filtered","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAYeA,EARF,SAACC,GAAD,OACT,sBAAKC,UAAU,iBAAf,UACA,qBAAMC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCKPC,EARE,SAAAR,GAAK,OACpB,qBAAKC,UAAU,YAAf,SACGD,EAAMI,QAAQK,KAAI,SAACL,GAAD,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCIVK,G,MATO,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAF,OAElB,uBAAOV,UAAU,SAClBW,KAAK,SACLC,YAAY,UACZC,SAAUH,MC8BEI,G,wDAhCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXZ,QAAS,GACTa,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEnB,QAASkB,S,oBAG9C,WAAU,IAAD,OACP,EAAiCE,KAAKR,MAA9BZ,EAAR,EAAQA,QAASa,EAAjB,EAAiBA,YACXQ,EAAWrB,EAAQsB,QAAO,SAACtB,GAAD,OAC9BA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAKlD,OACE,sBAAK1B,UAAU,MAAf,UACE,6BAAK,kBACN,cAAC,EAAD,CAAQU,aAAe,SAAAkB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAC/D,cAAC,EAAD,CAAU3B,QAASqB,W,GA5BTO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.516a0cd4.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./cardo.css\" ;\r\n\r\n\r\n const Card =(props)=>( \r\n    <div className=\"card-container\" > \r\n    <img  alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n    <h1 key={props.monster.id}>{props.monster.name}</h1> \r\n    <p>{props.monster.email}</p>\r\n   \r\n    </div>\r\n);\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card_list.css\";\r\nimport Card from \"../card/card\";\r\n\r\n\r\nconst CardList = props => (\r\n  <div className=\"card-list\">\r\n    {props.monster.map((monster) => (\r\n      <Card key={monster.id} monster={monster}></Card>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search.css\";\r\n\r\nexport const search = ({handleChange})=>(\r\n   \r\n    <input className=\"search\"\r\n   type='search'\r\n   placeholder=\"kya h!!\"\r\n   onChange={handleChange}></input>\r\n   \r\n\r\n)\r\nexport default search;","import React, { Component } from \"react\";\nimport CardList from \"./components/card_list/card_list_component\";\nimport  Search  from \"./components/search/search\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monster: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monster: users }));\n  }\n\n  render() {\n    const { monster, searchfield } = this.state;\n    const filtered = monster.filter((monster) =>\n      monster.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n    \n    \n\n    return (\n      <div className=\"App\">\n        <h1>{\"MONSTER ROLEX\"}</h1>\n       <Search handleChange={ e => this.setState({searchfield:e.target.value})}></Search>\n        <CardList monster={filtered}></CardList>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}